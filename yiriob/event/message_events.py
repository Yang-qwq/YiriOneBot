from typing import Literal, Optional

from pydantic import BaseModel, Field

from .base import EventBase
from yiriob.message import MessageChain

# Attention!
# All the code below the comment are generated by AI according OneBot 11 Standrad.
# The developer does not approve these code are all right.
# Please check them before you use them.


class MessageSender(BaseModel):
    user_id: int = Field(description="发送者 QQ 号")
    nickname: str = Field(description="昵称")
    sex: Literal["unknown", "male", "female"]
    age: Optional[int] = None

    card: Optional[str] = Field(default=None, description="群名片/备注。仅群消息有。")
    area: Optional[str] = Field(default=None, description="地区。仅群消息有。")
    level: Optional[str] = Field(default=None, description="等级。仅群消息有。")
    role: Optional[Literal["owner", "admin", "member"]] = Field(
        default=None, description="角色。仅群消息有。"
    )
    title: Optional[str] = Field(default=None, description="专属头衔。仅群消息有。")


class MessageEvent(EventBase):
    time: int = Field(description="事件发生的时间戳")
    self_id: int = Field(description="收到事件的机器人 QQ 号")
    post_type: Literal["message"] = "message"  # type: ignore
    message_type: Literal["private", "group"] = Field(description="消息类型")
    sub_type: Literal["friend", "group", "other"] = Field(
        description="消息子类型，如果是好友则是 friend，如果是群临时会话则是 group。"
    )
    message_id: int = Field(description="消息 ID")
    user_id: int = Field(description="发送者 QQ 号")
    message: MessageChain = Field(description="消息内容")
    raw_message: str = Field(description="原始消息内容")
    font: int = Field(description="字体")
    sender: MessageSender = Field(description="发送人信息")


class PrivateMessageEvent(MessageEvent):
    sub_type: Literal["friend"] = "friend"  # type: ignore
    reply: str = Field(default=None, description="要回复的内容")


class GroupMessageEvent(MessageEvent):
    sub_type: Literal["normal", "anonymous", "notice"] = "group"  # type: ignore
    message_type: Literal["group"] = "group"  # type: ignore
    group_id: int = Field(description="群号")
    anonymous: Optional[dict] = Field(
        default=None, description="匿名信息，如果不是匿名消息则为 null"
    )
    reply: str = Field(default=None, description="要回复的内容")
    auto_escape: bool = Field(default=False, description="消息内容是否作为纯文本发送")
    at_sender: bool = Field(default=True, description="是否要在回复开头 at 发送者")
    delete: bool = Field(default=False, description="撤回该条消息")
    kick: bool = Field(default=False, description="把发送者踢出群组")
    ban: bool = Field(default=False, description="把发送者禁言")
    ban_duration: int = Field(default=30, description="禁言时长")


# Attention!
# All the code above the comment are generated by AI according OneBot 11 Standrad.
# The developer does not approve these code are all right.
# Please check them before you use them.

__all__ = ["MessageSender", "MessageEvent", "PrivateMessageEvent", "GroupMessageEvent"]
